/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
};

&sk { release-after-ms = <2500>; };

&soft_off { hold-time-ms = <1000>; };

/ {
    combos {
        compatible = "zmk,combos";

        tilde_combo {
            bindings = <&kp TILDE>;
            key-positions = <15 16>;
            layers = <0>;
        };

        single_quotation_combo {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <19 20>;
            layers = <0>;
        };

        format_vs_code {
            bindings = <&vscode_format_code>;
            key-positions = <14 15 16>;
            layers = <0>;
        };

        functions_layer {
            bindings = <&tog 3>;
            key-positions = <37 40>;
        };

        numbers_layer {
            bindings = <&tog 5>;
            key-positions = <38 39>;
        };
    };

    macros {
        vscode_format_code: vscode_format_code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LSHIFT>,
                <&macro_tap>,
                <&kp F>,
                <&macro_release>,
                <&kp LSHFT &kp LALT>;

            label = "VSCODE_FORMAT_CODE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q       &kp W       &kp E        &kp R         &kp T        &kp Y          &kp U         &kp I        &kp O           &kp P               &kp GRAVE
&kp TAB     &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHIFT F  &kp G        &kp H          &mt LSHIFT J  &mt LCTRL K  &mt LEFT_ALT L  &mt LGUI SEMICOLON  &kp SQT
&mo 1       &kp Z       &kp X       &kp C        &kp V         &kp B        &kp N          &kp M         &kp COMMA    &kp DOT         &kp FSLH            &kp ENTER
                                    &key_repeat  &mo 4         &kp SPACE    &kp BACKSPACE  &mo 2         &caps_word
            >;
        };

        MEDIA {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4         &none    &none     &none           &none            &out OUT_TOG       &none       &none
&none         &none         &none         &none           &vscode_format_code  &none    &none     &kp C_PREVIOUS  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_NEXT  &none
&none         &none         &none         &bt BT_CLR_ALL  &none                &none    &kp C_PP  &none           &none            &none              &none       &none
                                          &none           &none                &none    &none     &none           &none
            >;
        };

        NAVIGATION {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans    &kp PAGE_UP    &kp LC(LEFT)    &kp UP_ARROW  &kp LC(RIGHT)    &trans      &trans
&trans  &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans    &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW  &kp DELETE  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &none     &none          &kp HOME        &kp TAB       &kp END          &trans      &kp ENTER
                              &trans     &trans     &trans    &kp BSPC       &trans          &trans
            >;

            label = "NAV";
        };

        FUNCTION {
            bindings = <
&none  &none      &none      &none      &none      &none     &kp F12  &kp F7  &kp F8  &kp F9  &none  &none
&none  &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &none     &kp F11  &kp F4  &kp F5  &kp F6  &none  &none
&none  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &none     &kp F10  &kp F1  &kp F2  &kp F3  &none  &none
                             &none      &trans     &trans    &trans   &trans  &none
            >;

            label = "FUN";
        };

        SYMBOLS {
            bindings = <
&trans  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)    &kp EQUAL      &kp GRAVE   &kp LS(SEMI)  &kp SEMI  &kp LS(EQUAL)  &trans
&trans  &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &kp LS(N6)    &kp LS(N8)     &kp LS(N9)  &kp LS(LBKT)  &kp LBKT  &kp MINUS      &trans
&trans  &trans      &trans      &kp BSLH    &kp PIPE    &kp LS(N7)    &kp LS(GRAVE)  &kp LS(N0)  &kp LS(RBKT)  &kp RBKT  &kp LS(MINUS)  &trans
                                &trans      &trans      &trans        &trans         &trans      &trans
            >;

            label = "SYM";
        };

        NUMBERS {
            bindings = <
&none  &none      &none      &none      &none      &none     &kp EQUAL   &kp N7   &kp N8  &kp N9  &kp LS(EQUAL)  &none
&none  &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &none     &kp LS(N8)  &kp N4   &kp N5  &kp N6  &kp MINUS      &none
&none  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &none     &kp N0      &kp N1   &kp N2  &kp N3  &kp FSLH       &none
                             &none      &none      &trans    &trans      &kp DOT  &none
            >;

            label = "NUM";
        };
    };
};
